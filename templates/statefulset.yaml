apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
spec:
  selector:
    {{- include "mysql-replication.selectorLabels" . | nindent 8 }}
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      {{- include "mysql-replication.selectorLabels" . | nindent 6 }}
  serviceName: "mysql"
  replicas: 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        {{- include "mysql-replication.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 10

      volumes:
        - hostPath:
          name: host-time
            path: /etc/localtime

      containers:
        - name: mysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: mysql
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-root
                  key: password

          volumeMounts:
            - name: host-time
              mountPath: /etc/localtime
              readOnly: true
            - name: data
              readOnly: false
              mountPath: /var/lib/mysql

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-storage"
      resources:
        requests:
          storage: 10Gi